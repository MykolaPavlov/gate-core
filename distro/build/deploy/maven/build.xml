<?xml version="1.0"?>
<project xmlns:artifact="antlib:org.apache.maven.artifact.ant" name="GATE-MAVEN-DEPLOY" basedir=".">
    <path id="maven-ant-tasks.classpath" path="maven-ant-tasks-2.1.1.jar"/>
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath"/>
    <description>Ant build file that pushes GATE pieces to the snapshot repository.</description>

    <!--
    Additional targets to publish new releases to sonatype staging
   
    For this to work you need an account on sonatype OSS, associated with the
    uk.ac.gate groupId via a ticket on their JIRA, and a suitable GPG key in
    the public GPG key servers.

    You must create a file ~/.m2/settings.xml similar to the following (with
    the correct GPG key settings and sonatype account inserted):

    <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                          http://maven.apache.org/xsd/settings-1.0.0.xsd">

      <profiles>
        <profile>
          <id>gate-release</id>
          <properties>
            <gate.gpg.keyname>my-gpg-key-identifier</gate.gpg.keyname>
            <gate.gpg.passphrase>my-gpg-key-passphrase</gate.gpg.passphrase>
          </properties>
        </profile>
      </profiles>

      <servers>
        <server>
          <id>gate-oss</id>
          <username>sonatype-username</username>
          <password>sonatype-password</password>
        </server>
      </servers>
    </settings>

    With this in place, you can use the publish.gate, publish.gate-compiler-jdt
    and publish.gate-asm targets to push releases of ${top}/bin/gate.jar,
    ${top}/lib/gate-compiler-jdt.jar and ${top}/lib/gate-asm.jar respectively
    to the Sonatype staging repository.  For JDT and ASM, you should manually
    update the relevant .pom.xml file first with the correct version number.
    -->

    <property name="staging.dir" location="stage" />

    <target name="stage.init">
        <delete dir="${staging.dir}" />
        <mkdir dir="${staging.dir}" />
    </target>

    <target name="stage.gate-compiler-jdt" depends="stage.init">
        <property name="basename.to.stage" location="${staging.dir}/gate-compiler-jdt" />
        <copy tofile="${basename.to.stage}.pom.xml"
              file="gate-compiler-jdt.pom.xml" />
        <copy tofile="${basename.to.stage}.jar"
              file="${top}/lib/gate-compiler-jdt.jar" />
        <jar destfile="${basename.to.stage}-javadoc.jar" basedir="." includes="gate-compiler-jdt-readme.txt"/>
        <jar destfile="${basename.to.stage}-sources.jar" basedir="." includes="gate-compiler-jdt-readme.txt"/>
    </target>

    <target name="stage.gate-asm" depends="stage.init">
        <property name="basename.to.stage" location="${staging.dir}/gate-asm" />
        <copy tofile="${basename.to.stage}.pom.xml"
              file="gate-asm.pom.xml" />
        <copy tofile="${basename.to.stage}.jar"
              file="${top}/lib/gate-asm.jar" />
        <jar destfile="${basename.to.stage}-javadoc.jar" basedir="." includes="gate-asm-readme.txt"/>
        <jar destfile="${basename.to.stage}-sources.jar" basedir="." includes="gate-asm-readme.txt"/>
    </target>

    <!-- Generic target to publish a release of ${basename.to.stage} -->
    <target name="publish.release">
        <artifact:mvn pom="sign-and-deploy.pom.xml">
            <arg value="-Pgate-release,publish-generic"/>
            <arg value="-Dfile=${basename.to.stage}" />
        </artifact:mvn>
    </target>

    <!-- publish a new version of gate-compiler-jdt -->
    <target name="publish.gate-compiler-jdt"
            depends="stage.gate-compiler-jdt, publish.release" />

    <!-- publish a new version of gate-asm -->
    <target name="publish.gate-asm"
            depends="stage.gate-asm, publish.release" />
</project>
